version: '3.8'

services:
  # Webserver Service
  webserver:
    image: nginx:latest
    container_name: nginx_web
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
    networks:
      - webnet
    depends_on:
      - backend-prod
    restart: unless-stopped

  # Cloudflared Service
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_tunnel
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - webserver
      - code_server
    networks:
      - webnet
    volumes:
      - ./config.yml:/etc/cloudflared/config.yml
    restart: unless-stopped

  # Code Server Service
  code_server:
    image: codercom/code-server:latest
    container_name: vscode_server
    environment:
      - PASSWORD=${CODE_SERVER_PASSWORD}
    ports:
      - "8081:8080"
    networks:
      - webnet
    volumes:
      - ../:/home/coder/project:rw
    user: "1001:1001"  # Use the host UID and GID here
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Database Service
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=symfony
      - POSTGRES_PASSWORD=${SYMFONY_PASSWORD}
      - POSTGRES_DB=symfony
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    restart: always

  # Backend Production Service
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile_prod
    container_name: symfony_backend_prod
    environment:
      - SYMFONY_ENV=prod
    networks:
      - webnet
    depends_on:
      - db
    restart: always

  # Development Services (unchanged)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile_dev
    container_name: symfony_backend_dev
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
    environment:
      - SYMFONY_ENV=dev
    networks:
      - webnet
    depends_on:
      - db
    profiles:
      - dev
    restart: always

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile_dev
    container_name: svelte_frontend_dev
    ports:
      - "8082:5173"
    volumes:
      - ./frontend:/app
    stdin_open: true
    tty: true
    networks:
      - webnet
    profiles:
      - dev
    restart: unless-stopped

networks:
  webnet:
    driver: bridge

volumes:
  pgdata:
