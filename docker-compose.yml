# docker-compose.yml
version: '3.8'
services:
  webserver:
    image: nginx:latest
    container_name: webserver
    ports:
      - "8080:80"  # Production
      - "8082:80"  # Development (map external 8082 to container's 80)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro        # Production build
      - ./nginx/html-dev:/usr/share/nginx/html-dev:ro  # Development build
    networks:
      - webnet
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - webserver
      - code-server
      - backend
    networks:
      - webnet
    volumes:
      - ./config.yml:/etc/cloudflared/config.yml
    restart: unless-stopped

  code-server:
    image: codercom/code-server:latest
    container_name: code-server
    environment:
      - PASSWORD=${CODE_SERVER_PASSWORD}
    ports:
      - "8081:8080"
    networks:
      - webnet
    volumes:
      - ../:/home/coder/project:rw
    user: "1001:1001"
    stdin_open: true
    tty: true
    restart: unless-stopped

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_USER=symfony
      - POSTGRES_PASSWORD=${SYMFONY_PASSWORD}
      - POSTGRES_DB=symfony
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile_dev
    container_name: backend
    user: "1001:1001"
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html:rw
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://symfony:${SYMFONY_PASSWORD}@database:5432/symfony?serverVersion=15&charset=utf8
    networks:
      - webnet
    depends_on:
      - database

networks:
  webnet:
    driver: bridge

volumes:
  pgdata:
  nginx_cache:
  nginx_run: